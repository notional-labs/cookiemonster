{"version":3,"sources":["helpers/getKeplr.js","helpers/transaction.js","pages/Register.js","helpers/getBalance.js","pages/Asset/Asset.js","components/Account.js","pages/RunManuallyScreen/Screen1.js","pages/RunManuallyScreen/Screen2.js","pages/RunManuallyScreen/Screen3.js","pages/RunManuallyScreen/Screen4.js","pages/RunManuallyScreen/RootScreen.js","components/DepositButton.js","components/DepositModal.js","assets/img/logo.png","helpers/API/api.js","App.js","reportWebVitals.js","index.js"],"names":["getKeplr","a","chain_id","window","getOfflineSigner","keplr","alert","enable","offlineSigner","getAccounts","accounts","getCosmosClient","SigningCosmosClient","address","transaction","cosmJS","recipient","memo","sendTokens","coins","ret","console","log","Title","Typography","Paragraph","style","div","display","flexDirection","justifyContent","alignContent","backgroundColor","borderStyle","borderWidth","borderColor","height","width","borderRadius","marginLeft","boxShadow","buttonDiv","alignSelf","marginTop","button","size","color","padding","paddingTop","p","content","alignItems","marginBotom","fontSize","addrDiv","marginBottom","addrContent","margin","overflowWrap","Register","useState","handleClickRegister","then","res","catch","err","claasName","onClick","onMouseEnter","e","target","transform","onMouseLeave","WalletOutlined","level","copyable","text","length","substring","mapIbc","balance","returnBalance","denom","name","amount","logo","key","ibc","chains","chain_name","toUpperCase","parseInt","toString","getBalance","apiUrl","URL","balances","axios","get","data","result","map","b","newBalance","push","getOsmo","undefined","filterBalance","filter","x","divTitle","textAlign","Asset","listAsset","setListAsset","success","message","error","useEffect","warning","columns","dataIndex","fixed","render","title","dataSource","Screen1","current","wrapSetter","state","setState","fetchReward","setTimeout","Screen2","identifiedBestReturns","mess","notification","open","description","Screen3","autoInvest","Screen4","getBalances","flexDiv","buttonText","RootScreen","setCurrent","useCallback","value","CaretRightFilled","RightOutlined","DepositButton","collapsed","TransactionOutlined","transfer","transferInfo","border","container","form","DepositModal","account","cookieMonster","handleClick","ArrowRightOutlined","min","root_Url","checkAccount","post","Content","Layout","Header","Sider","Footer","App","setAccount","setCookieMonster","setCollapsed","imageShrink","setImageShrink","displayTransactionModal","setDisplayTransactionModal","getAccount","Address","className","minHeight","marginRight","theme","collapsible","onCollapse","src","preview","mode","Item","icon","HomeOutlined","fontWeight","to","ReconciliationOutlined","paddingBottom","exact","path","element","Modal","show","onHide","closeButton","Body","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f734cf3.chunk.js","sourcesContent":["import { SigningCosmosClient, \n    LcdClient,\n    setupBankExtension, } from \"@cosmjs/launchpad\";\n\n\nexport const getKeplr = async (chain_id = \"osmosis-1\") => {\n    if (!window.getOfflineSigner || !window.keplr) {\n        alert(\"Keplr Wallet not detected, please install extension\");\n    } else {\n        await window.keplr.enable(chain_id);\n        const offlineSigner = window.keplr.getOfflineSigner(chain_id);\n        const accounts = await offlineSigner.getAccounts();\n        return {\n            accounts,\n            offlineSigner,\n        };\n    }\n}\n\nexport const getCosmosClient = (accounts, offlineSigner) => {\n    const URL = \"https://lcd-osmosis.keplr.app\"\n    const cosmJS = new SigningCosmosClient(\n        URL,\n        accounts[0].address,\n        offlineSigner,\n    );\n    return cosmJS;\n}\n\n// export const getBalance = async (address) => {\n//     const apiUrl = \"https://lcd-osmosis.keplr.app\"\n//     const client = LcdClient.withExtensions(\n//         apiUrl,\n//         setupBankExtension,\n//     )\n//     const balance = await client.bank.balances(address);\n//     return balance\n// }","import { coins } from \"@cosmjs/launchpad\";\n\nexport const transaction = async (cosmJS, amount = 1000000, recipient = 'osmo1cptdzpwjc5zh6nm00dvetlg24rv9j3tjh7wnnz') => {\n    // define memo (not required)\n    const memo = \"Deposit\";\n    // sign and broadcast Tx\n    const ret = await cosmJS.sendTokens(recipient, coins(1000000, \"uosmo\"), memo);\n    console.log(ret)\n    return ret\n}\n","import { Typography, message } from 'antd';\nimport { useState } from 'react'\nimport { WalletOutlined } from '@ant-design/icons'\nimport { getKeplr, getCosmosClient, } from '../helpers/getKeplr';\nimport { transaction } from '../helpers/transaction';\n\nconst { Title, Paragraph } = Typography;\n\nconst style = {\n    div: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center space-between',\n        alignContent: 'center',\n        backgroundColor: '#ffc369',\n        borderStyle: 'solid',\n        borderWidth: '20px',\n        borderColor: '#ffb459',\n        height: '35em',\n        width: '30%',\n        borderRadius: '10px',\n        marginLeft: '50em',\n        boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.5), 0 6px 20px 0 rgba(0, 0, 0, 0.5)',\n    },\n    buttonDiv: {\n        alignSelf: 'stretch',\n        marginTop: '5em',\n    },\n    button: {\n        borderWidth: '0px',\n        borderRadius: '10px',\n        size: '10em',\n        backgroundColor: '#ff9e61',\n        color: '#ffffff',\n        boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.5), 0 6px 20px 0 rgba(0, 0, 0, 0.5)',\n        width: \"80%\",\n        height: \"10%\",\n        padding: '4em',\n        paddingTop: '2em'\n    },\n    p: {\n        marginLeft: '1em'\n    },\n    content: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginBotom: '10px',\n        fontSize: '30px',\n    },\n    addrDiv: {\n        marginTop: '10em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'left',\n        alignContent: 'left',\n        marginBottom: '10em',\n    },\n    addrContent: {\n        backgroundColor: '#ffffff',\n        alignContent: 'left',\n        margin: '5em',\n        marginTop: '1px',\n        alignItems: 'left',\n        borderRadius: '10px',\n        overflowWrap: 'break-word',\n        padding: '1em'\n    }\n\n}\n\nconst Register = () => {\n    const [address, setAddress] = useState(\"hello\")\n\n    const handleEnter = (e) => {\n        e.target.style.transform = 'scale(1.01)'\n    }\n\n    const handleLeave = (e) => {\n        e.target.style.transform = 'scale(1)'\n    }\n    const handleClickRegister = async () => {\n        const { accounts, offlineSigner } = await getKeplr();\n        const cosmJS = getCosmosClient(accounts, offlineSigner);\n        if (cosmJS != null) {\n            transaction(cosmJS).then(res => {\n\n            }).catch(err => {\n                \n            })\n\n        }\n    }\n    return (\n        <div claasName=\"container-fluid\" style={style.div}>\n            <div style={style.buttonDiv}>\n                <button\n                    onClick={async () => await handleClickRegister()}\n                    size='large'\n                    style={style.button}\n                    onMouseEnter={handleEnter}\n                    onMouseLeave={handleLeave}\n                >\n                    <div style={style.content}>\n                        <WalletOutlined />\n                        <span style={style.p}>\n                            Register\n                        </span>\n                    </div>\n                </button>\n            </div>\n            {address !== \"\" && (\n                <div style={style.addrDiv}>\n                    <Title level={3}>Generated wallet address</Title>\n                    <div style={style.addrContent}>\n                        <Paragraph copyable={{ text: address }}>\n                            {address.length > 100 ? `${address.substring(0, 100)}... ` : `${address} `}\n                        </Paragraph>\n                    </div>\n                </div>\n            )}\n            <div>\n\n            </div>\n        </div>\n    )\n}\n\n\nexport default Register;\n","import axios from \"axios\";\nimport { getKeplr } from \"./getKeplr\";\nimport chains from '../chains/chains.json'\nimport ibc from '../chains/mapIBC.json'\n\nconst osmosisLogo = 'https://dl.airtable.com/.attachments/4ef30ec4008bc86cc3c0f74a6bb84050/0eeb4d64/aQ5W3zaT_400x400.jpg'\nconst ionLogo = 'https://app.osmosis.zone/public/assets/tokens/ion.png'\n\nconst mapIbc = (balance) => {\n    let returnBalance = {\n        denom: '',\n        name: '',\n        amount: '',\n        logo: ''\n    }\n    if(balance.denom.substring(0,4) === \"ibc/\"){\n        const key = ibc[`${balance.denom}`]\n        if(chains[`${key}`]) {\n            returnBalance.denom = chains[`${key}`]['denom']\n            const chain_name = chains[`${key}`]['chain_name'] \n            returnBalance.name = key + ' - ' + chain_name.toUpperCase() \n            returnBalance.amount = (parseInt(balance.amount)/1000000).toString()\n            returnBalance.logo = chains[`${key}`]['logo']\n        }\n    }\n    else {\n        returnBalance.denom = balance.denom\n        const chain_name = balance.denom === 'uosmo' ? 'osmo' : 'ion'\n        returnBalance.name = chain_name.toUpperCase()\n        returnBalance.amount = (parseInt(balance.amount)/1000000).toString()\n        returnBalance.logo = balance.denom === 'uosmo' ? osmosisLogo : ionLogo\n    }\n    return returnBalance\n} \n\nexport const getBalance = async (apiUrl = \"https://lcd-osmosis.keplr.app\", address) => {\n    const URL = `${apiUrl}/bank/balances/${address}`\n    let balances = []\n    const res= await axios.get(URL)\n    if(res.data && res.data.result){\n        res.data.result.map(b => {\n            const newBalance = mapIbc(b)\n            balances.push(newBalance)\n        })   \n    }\n    return balances\n}\n\nexport const getOsmo = async (address) => {\n    const balances = await getBalance(undefined, address)\n    if(balances.length === 0){\n        return 0\n    }\n    const filterBalance = balances.filter(x => x.denom === 'uosmo')\n    return filterBalance[0].amount\n}\n\nexport const getKeplrBalances = () => {\n    let balances = []\n    Object.keys(chains).map( async (chain) => {\n        const { accounts } = await getKeplr(chains[chain].chain_id);\n        const { data } = getBalance(chains[chain].apiUrl, accounts[0].address)\n        if (data && data.result && data.result.length > 0){\n            balances.push({\n                balance: data.result,\n                logo: chains[chain].logo,\n            })\n        }\n    })\n    return balances\n}","import { useState, useEffect } from 'react'\nimport { getBalance } from '../../helpers/getBalance';\nimport { Image, Table, Typography, message, } from 'antd';\nimport './Asset.css'\n\nconst { Title, } = Typography;\n\nconst style = {\n    divTitle: {\n        display: 'flex',\n        justifyContent: 'left',\n        alignContent: 'left',\n        textAlign: 'left',\n    },\n    div: {\n        marginBottom: '8rem',\n        borderRadius: '10px'\n    }\n}\n\nconst Asset = ({ address }) => {\n    const [listAsset, setListAsset] = useState([]);\n\n    const success = () => {\n        message.success('Fetching success', 1);\n    };\n\n    const error = () => {\n        message.error('Fetching failed', 1);\n    };\n\n    const warning = () => {\n        message.warning('No Assets Yet', 1);\n    };\n\n    useEffect(() => {\n        console.log(address)\n        if (address !== '') {\n            (() => {\n                getBalance(undefined, address).then(balances => {\n                    if (balances.length > 0) {\n                        setListAsset([...balances])\n                        success()\n                    }\n                    warning()\n                }).catch(() => {\n                    error()\n                })\n            })()\n        }\n        else {\n            (() => {\n                getBalance(undefined, 'osmo1cy2fkq04yh7zm6v52dm525pvx0fph7ed75lnz7').then(balances => {\n                    if (balances.length > 0) {\n                        setListAsset([...balances])\n                        success()\n                    }\n                }).catch(() => {\n                    error()\n                })\n            })()\n        }\n    }, [])\n\n    const columns = [\n        {\n            dataIndex: 'logo',\n            key: 'logo',\n            fixed: 'left',\n            render: (logo) => {\n                <Image\n                    width={50}\n                    src={logo}\n                />\n            }\n        },\n        {\n            title: 'Asset/Chain',\n            dataIndex: 'name',\n            key: 'name',\n            fixed: 'left',\n\n        },\n        {\n            title: 'Amount',\n            dataIndex: 'amount',\n            key: 'amount',\n            fixed: 'left',\n        },\n    ];\n    return (\n        <div style={style.div}>\n            <div style={style.divTitle}>\n                <Title>Osmosis Assets</Title>\n            </div>\n            <hr />\n            <Table\n                dataSource={listAsset}\n                columns={columns}\n                style={{ marginTop: '3rem', borderRadius: '5px' }}\n            />\n        </div>\n    )\n}\n\nexport default Asset;","import { Typography, message } from 'antd';\n\nconst { Title, Paragraph } = Typography;\n\nconst Account = ({ account }) => {\n    return (\n        <div>\n            <Title level={4}>Wallet info</Title>\n            <div>\n                <Paragraph copyable={{ text: account.address }}>\n                    {account.address.length > 100 ? `${account.address.substring(0, 100)}... ` : `${account.address} `}\n                </Paragraph>\n            </div>\n        </div>\n    )\n}\n\nexport default Account","import { useState, useEffect } from 'react'\n\nconst Screen1 = ({ current, wrapSetter }) => {\n    const [state, setState] = useState('pending')\n\n    useEffect(() => {\n        if (current === 1) {\n            setState('running')\n            fetchReward()\n        }\n        else if( current === 0){\n            setState('pending')\n        }\n    }, [current])\n\n    const fetchReward = () => {\n        setTimeout(() => {\n            wrapSetter(2)\n        }, 3000)\n    }\n\n    return (\n        <div style={{\n            height: '10rem',\n            width: '20%',\n            borderRadius: '10px',\n            borderWidth: '30px',\n            backgroundColor: state === 'running' ? '#8abf80' : '#e6e6e6',\n            paddingTop: '4.2rem',\n            boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.5), 0 6px 20px 0 rgba(0, 0, 0, 0.5)',\n        }}>\n            Pulling Reward\n        </div>\n    )\n}\n\nexport default Screen1","import { useState, useEffect } from 'react'\nimport { message, notification } from 'antd'\n\nconst Screen2 = ({ current, wrapSetter }) => {\n    const [state, setState] = useState('pending')\n\n    useEffect(() => {\n        if (current === 2) {\n            setState('running')\n            identifiedBestReturns()\n        }\n        else if (current === 0) {\n            setState('pending')\n        }\n    }, [current])\n\n    const openNotification = (title, mess) => {\n        notification.open({\n            message: title,\n            description: mess\n        });\n    };\n\n    const identifiedBestReturns = () => {\n        setTimeout(() => {\n            openNotification('Pool found', 'Pick Pool #1')\n            wrapSetter(3)\n        }, 2000)\n    }\n\n\n    return (\n        <div style={{\n            height: '10rem',\n            width: '20%',\n            borderRadius: '10px',\n            borderWidth: '30px',\n            backgroundColor: state === 'running' ? '#8abf80' : '#e6e6e6',\n            paddingTop: '4.2rem',\n            boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.5), 0 6px 20px 0 rgba(0, 0, 0, 0.5)',\n        }}>\n            Identify Best Returns\n        </div>\n    )\n}\n\nexport default Screen2","import { useState, useEffect } from 'react'\nimport { message, notification } from 'antd'\n\nconst Screen3 = ({ current, wrapSetter }) => {\n    const [state, setState] = useState('pending')\n\n    useEffect(() => {\n        if (current === 3) {\n            setState('running')\n            autoInvest()\n        }\n        else if (current === 0) {\n            setState('pending')\n        }\n    }, [current])\n\n    const openNotification = (title, mess) => {\n        notification.open({\n            message: title,\n            description: mess\n        });\n    };\n\n\n    const autoInvest = () => {\n        setTimeout(() => {\n            openNotification('Auto Invest', 'Success')\n            wrapSetter(4)\n        }, 3000)\n    }\n\n    return (\n        <div style={{\n            height: '10rem',\n            width: '20%',\n            borderRadius: '10px',\n            borderWidth: '30px',\n            backgroundColor: state === 'running' ? '#8abf80' : '#e6e6e6',\n            paddingTop: '4.2rem',\n            boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.5), 0 6px 20px 0 rgba(0, 0, 0, 0.5)',\n        }}>\n            Auto Invest\n        </div>\n    )\n}\n\nexport default Screen3","import { useState, useEffect } from 'react'\n\nconst Screen4 = ({ current, wrapSetter }) => {\n    const [state, setState] = useState('pending')\n\n    useEffect(() => {\n        if (current === 4) {\n            setState('running')\n            getBalances()\n        }\n        else if (current === 0) {\n            setState('pending')\n        }\n    }, [current])\n\n    const getBalances = () => {\n        setTimeout(() => {\n            wrapSetter(0)\n        }, 3000)\n    }\n\n    return (\n        <div style={{\n            height: '10rem',\n            width: '20%',\n            borderRadius: '10px',\n            borderWidth: '30px',\n            backgroundColor: state === 'running' ? '#8abf80' : '#e6e6e6',\n            paddingTop: '4.2rem',\n            boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.5), 0 6px 20px 0 rgba(0, 0, 0, 0.5)',\n        }}>\n            New Balances\n        </div>\n    )\n}\n\nexport default Screen4","import { useState, useCallback } from 'react'\nimport { Typography, notification } from 'antd';\nimport { CaretRightFilled, RightOutlined } from '@ant-design/icons'\nimport Screen1 from './Screen1';\nimport Screen2 from './Screen2';\nimport Screen3 from './Screen3';\nimport Screen4 from './Screen4';\n\nconst { Title, } = Typography;\n\nconst style = {\n    flexDiv: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    divTitle: {\n        display: 'flex',\n        justifyContent: 'left',\n        alignContent: 'left',\n        textAlign: 'left',\n    },\n    div: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        alignContent: 'center'\n    },\n    button: {\n        borderWidth: '0px',\n        borderRadius: '10px',\n        backgroundColor: '#8abf80',\n        color: '#ffffff',\n        boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.5), 0 6px 20px 0 rgba(0, 0, 0, 0.5)',\n        width: \"30%\",\n        height: \"5rem\",\n        padding: '2rem',\n        paddingTop: '1rem',\n        marginTop: '10rem',\n    },\n    buttonText: {\n        fontSize: '30px',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n    }\n}\n\nconst RootScreen = () => {\n    const [current, setCurrent] = useState(0)\n\n    const wrapSetter = useCallback(value => {\n        setCurrent(value)\n    }, [setCurrent])\n\n    const handleEnter = (e) => {\n        e.target.style.transform = 'scale(1.01)'\n    }\n\n    const handleLeave = (e) => {\n        e.target.style.transform = 'scale(1)'\n    }\n\n    const startManual = () => {\n        setCurrent(1)\n    }\n\n    return (\n        <div style={style.div}>\n            <div style={style.divTitle}>\n                <Title>BeanStalk</Title>\n            </div>\n            <hr />\n            <div style={{ ...style.flexDiv, marginTop: '2rem' }}>\n                <Screen1 current={current} wrapSetter={wrapSetter} />\n                <CaretRightFilled style={{ fontSize: '10rem', color: '#7a7a7a' }} />\n                <Screen2 current={current} wrapSetter={wrapSetter} />\n                <CaretRightFilled style={{ fontSize: '10rem', color: '#7a7a7a' }} />\n                <Screen3 current={current} wrapSetter={wrapSetter} />\n                <CaretRightFilled style={{ fontSize: '10rem', color: '#7a7a7a' }} />\n                <Screen4 current={current} wrapSetter={wrapSetter} />\n            </div>\n            <div>\n                <button style={style.button}\n                    onClick={startManual}\n                    onMouseEnter={handleEnter}\n                    onMouseLeave={handleLeave}>\n                    <div style={style.buttonText}>\n                        <p>Run Manually</p> <RightOutlined style={{ marginTop: '0.6rem' }} />\n                    </div>\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default RootScreen","import { TransactionOutlined } from '@ant-design/icons';\nimport { transaction } from '../helpers/transaction';\n\nconst style = {\n    button: {\n        borderWidth: '0px',\n        borderRadius: '5px',\n        size: '10em',\n        backgroundColor: '#9c8bad',\n        color: '#ffffff',\n        width: \"80%\",\n        height: \"3rem\",\n    },\n}\n\nconst DepositButton = ({ collapsed, wrapSetter }) => {\n    const handleClick = () => {\n        wrapSetter(true)\n    }\n\n    return (\n        <div style={{ marginTop: '34rem', marginBottom: '0.3rem' }}>\n            <hr />\n            <button style={{ ...style.button, fontSize: !collapsed ? '15px' : '10px' }}\n                onClick={handleClick}>\n                {!collapsed ? <div>Deposit <TransactionOutlined style={{ fontSize: '1.5rem' }} /></div>\n                    :\n                    (<TransactionOutlined style={{ fontSize: '1.5rem' }} />)}\n            </button>\n        </div>\n    )\n}\n\nexport default DepositButton","import { Modal, Button, InputNumber, message } from \"antd\"\nimport { ArrowRightOutlined } from '@ant-design/icons';\nimport { transaction } from \"../helpers/transaction\"\nimport { getKeplr, getCosmosClient } from \"../helpers/getKeplr\";\n\nconst style = {\n    transfer: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        marginBottom: '2rem'\n    },\n    transferInfo: {\n        padding: '10px',\n        border: `2px solid #c4c4c4`,\n        borderRadius: '10px',\n        width: '12rem'\n    },\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n    },\n    form: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n    },\n    button: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        marginTop: '2rem',\n        marginBottom: '2rem'\n    }\n}\n\n\nconst DepositModal = ({ account, wrapSetter, cookieMonster }) => {\n\n    const success = () => {\n        message.success('Deposit success', 1);\n    };\n\n    const error = () => {\n        message.error('Deposit failed', 1);\n    };\n\n    const handleClick = async () => {\n        const { accounts, offlineSigner } = await getKeplr();\n        const cosmJS = getCosmosClient(accounts, offlineSigner);\n        if (cosmJS != null) {\n            transaction(cookieMonster).then(data => {\n                console.log(data)\n                wrapSetter(false)\n                success()\n            }).catch(() => {\n                error()\n                wrapSetter(false)\n            })\n        }\n    }\n\n    return (\n        <div>\n            <div style={style.transfer}>\n                <div style={style.transferInfo}>\n                    <p>From</p>\n                    <p>{account.address}</p>\n                </div>\n                <ArrowRightOutlined style={{ fontSize: '2rem', marginTop: '15px' }} />\n                <div style={style.transferInfo}>\n                    <p>To</p>\n                    <p>{cookieMonster}</p>\n                </div>\n            </div>\n            <div style={style.form}>\n                <div style={{ marginBottom: '1rem' }}>Amount To Deposit</div>\n                <InputNumber style={{\n                    width: '100%',\n                    height: '60px',\n                    borderRadius: '10px',\n                    border: `2px solid #c4c4c4`,\n                    fontSize: '2rem'\n                }} min={0} size='large' />\n            </div>\n            <div style={style.button}>\n                <button onClick={handleClick} style={{ borderRadius: '10px', height: '4rem', fontSize: '1.5rem', backgroundColor: '#9b8da6', color: '#ffffff' }}>\n                    Deposit\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default DepositModal","export default __webpack_public_path__ + \"static/media/logo.d4e302ed.png\";","import axios from \"axios\";\n\nconst root_Url = 'http://192.168.1.29:8000'\n\nexport const checkAccount = async (address) => {\n    const res = await axios.post(`${root_Url}/check-account`, { address })\n    return res\n}\n\nexport const deposit = async (address, txHash) => {\n    const res = await axios.post(`${root_Url}/deposit`, { address, 'tx-hash': txHash })\n    return res\n}\n\nexport const autoInvest = async (address) => {\n    const res = await axios.post(`${root_Url}/auto-invest`, { address })\n    return res\n}\n\nexport const pullReward = async (address) => {\n    const res = await axios.post(`${root_Url}/pull-reward`, { address })\n    return res\n}\n","\nimport './App.css';\n\nimport Register from './pages/Register';\nimport Asset from './pages/Asset/Asset'\nimport HomePage from './pages/HomePage';\nimport Account from './components/Account';\nimport RootScreen from './pages/RunManuallyScreen/RootScreen';\nimport DepositButton from './components/DepositButton';\nimport DepositModal from './components/DepositModal';\n\nimport \"antd/dist/antd.css\";\nimport { Layout, Menu, Image, message, } from 'antd';\nimport {\n  HomeOutlined,\n  WalletOutlined,\n  UserOutlined,\n  ReconciliationOutlined,\n} from '@ant-design/icons';\nimport { Modal, Button } from 'react-bootstrap';\nimport { useState, useCallback } from 'react'\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport { getKeplr, } from './helpers/getKeplr';\nimport { getOsmo } from './helpers/getBalance';\nimport logo from './assets/img/logo.png';\n\nimport { checkAccount } from './helpers/API/api';\n\nconst { Header, Content, Footer, Sider } = Layout;\n\nconst style = {\n  div: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignContent: 'center'\n  },\n  button: {\n    borderWidth: '0px',\n    borderRadius: '5px',\n    size: '10em',\n    backgroundColor: '#8abf80',\n    color: '#ffffff',\n    width: \"80%\",\n    height: \"3rem\",\n  },\n}\n\nfunction App() {\n  const [account, setAccount] = useState({\n    address: '',\n    amount: ''\n  })\n  const [cookieMonster, setCookieMonster] = useState('')\n  const [collapsed, setCollapsed] = useState(false)\n  const [imageShrink, setImageShrink] = useState(false)\n  const [displayTransactionModal, setDisplayTransactionModal] = useState(false)\n\n  const wrapSetter = useCallback(value => {\n    setDisplayTransactionModal(value)\n  }, [setDisplayTransactionModal])\n\n  const onCollapse = () => {\n    setCollapsed(!collapsed)\n    setTimeout(() => {\n      setImageShrink(!imageShrink)\n    }, 100);\n  }\n\n  const success = () => {\n    message.success('Connect', 1);\n  };\n\n  const error = () => {\n    message.error('Connect failed', 1);\n  };\n\n  const getAccount = async () => {\n    const { accounts, offlineSigner } = await getKeplr()\n    const amount = await getOsmo(accounts[0].address)\n    setAccount({\n      address: accounts[0].address,\n      amount: (parseInt(amount) / 1000000).toString()\n    })\n    checkAccount('osmo1cy2fkq04yh7zm6v52dm525pvx0fph7ed75lnz7').then(res => {\n      if (res.data.Address !== ''){\n        success()\n        setCookieMonster(res.data.Address)\n      }\n    }).catch(() => {\n      error()\n    })\n  }\n\n  return (\n    <div className=\"App container-fluid\">\n      <Layout style={{ minHeight: '100vh', marginLeft: '-12px', marginRight: '-12px', }}>\n        <Router>\n          <Sider theme='light'\n            collapsible\n            collapsed={collapsed}\n            onCollapse={onCollapse}\n            width={256}\n            style={{ backgroundColor: '#ffffff' }}>\n            <div className=\"logo\" style={{ marginRight: '0.1rem', marginTop: '1rem', marginBottom: '1rem' }} >\n              <Image\n                width={!imageShrink ? 100 : 50}\n                src={logo}\n                preview={false}\n              />\n            </div>\n            <hr />\n            <Menu theme=\"light\" style={{ backgroundColor: '#ffffff' }}\n              mode=\"inline\"\n            >\n              <Menu.Item key=\"home\"\n                icon={<HomeOutlined style={{ marginLeft: !collapsed ? '1.5rem' : '-0.3rem', fontSize: '1rem', }} />}\n                style={{ margin: 0, marginTop: '10px', fontSize: '1.3rem', color: '#2b2b2b', fontWeight: 300 }}\n                className=\"modified-item\"\n              >\n                Home\n                <Link to='/' />\n\n              </Menu.Item>\n              <Menu.Item key=\"asset\"\n                icon={<WalletOutlined style={{ marginLeft: !collapsed ? '1.5rem' : '-0.3rem', fontSize: '1rem', }} />}\n                style={{ margin: 0, marginTop: '10px', fontSize: '1.3rem', color: '#2b2b2b', fontWeight: 300 }}\n                className=\"modified-item\"\n              >\n                Asset\n                <Link to='/asset' />\n\n              </Menu.Item>\n            </Menu>\n            {\n              cookieMonster === '' ? (\n                <div style={{ marginTop: '34rem', marginBottom: '0.3rem' }}>\n                  <hr />\n                  <button style={{ ...style.button, fontSize: !collapsed ? '15px' : '10px' }}\n                    onClick={async () => {\n                      await getAccount()\n                    }}>\n                    {!collapsed ? 'Connect To BeanStalk' : (<ReconciliationOutlined style={{ fontSize: '1.5rem' }} />)}\n                  </button>\n                </div>\n              ) : (\n                <DepositButton collapsed={collapsed} wrapSetter={wrapSetter} />\n              )\n            }\n\n          </Sider>\n          <Layout className=\"site-layout\" style={{ backgroundColor: '#c5e6be', }}>\n            <Content style={{ margin: '2rem' }}>\n              <div className=\"site-layout-background\" style={{ padding: 24, paddingTop: '2rem', paddingBottom: '17rem', minHeight: 360, marginTop: '10px' }}>\n                <Routes>\n                  <Route exact path=\"/\" element={<RootScreen />} />\n                  <Route exact path=\"/asset\" element={<Asset address={cookieMonster} />} />\n                  <Route exact path=\"/account\" element={<Register />} />\n                </Routes>\n              </div>\n            </Content>\n          </Layout>\n        </Router>\n      </Layout>\n\n      <>\n        <Modal show={displayTransactionModal} onHide={() => { setDisplayTransactionModal(false) }}>\n          <Modal.Header closeButton>\n            <Modal.Title>Deposit</Modal.Title>\n          </Modal.Header>\n          <Modal.Body >\n            <DepositModal cookieMonster={cookieMonster} account={account} wrapSetter={wrapSetter} />\n          </Modal.Body>\n        </Modal>\n      </>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}